using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;

namespace Quiz_game_design_and_coded_solution
{
    public partial class General_knowledge_question : Form
    {
        // quiz game variables
        int correctAnswer;
        int questionNumber = 0;
        int optionnumber = 5;
        int score = 0;
        int percentage;
        int totalQuestions;
        DateTime startTime = DateTime.Now;
        int[] goArray;
        static string subject = "General Knowledge";

        // This holds the path to the file which contains the questions for the quiz
        static string FilePath = @"D:\NEA UPDATED 16-02-2023\9-02-2023---NEA-UPDATED-PROJECT-main\NEA 16-02-2023\Quiz game design and coded solution\bin\Debug\gk.txt";
        //This declares a list of strings called questions. This holds the questions for the quiz
        List<string> questions;

        //This is a constructor for the specific mode class which essentially initializes the form, reads in the questions from the file and will start the timer
        public General_knowledge_question()
        {
            question_reading(); // calls the question reading method
            InitializeComponent();// a method generated by Visual Studio that initializes all the components of the form
            askQuestion(0, 5);// 1 and 10 as arguments. This method  etrieves and displays questions, with the arguments indicating the range of questions to retrieve (in this case, from the first to the 10th question).
            totalQuestions = 10; // this is the total amount of questions
            timer1.Start(); // start timer
        }

        public void question_reading() // public method for question_reading
        {
            FilePath = System.Environment.CurrentDirectory + "\\gk.txt"; // this is the current directory of the file
            int count = 0; // this declares the count variable as an integer
            string data; // this declares the data as a string 
            FileStream fileStream = new FileStream(FilePath, FileMode.Open, FileAccess.Read);
            StreamReader streamReader = new StreamReader(fileStream);

            questions = new List<string>();// instantiates the list

            while (count < 60) // while count is less than 60
            {
                data = streamReader.ReadLine();// This will read each line of the file
                questions.Add(data);// This will add the line to the questions list
                count++; // This will increment the count variable
            }

        }
        // This an event handler for when the user clicks on the correct answer button
        private void checkAnswereEvent(object sender, EventArgs e)
        {
            var senderObject = (Button)sender;// This will retrieve the button when it is clicked


            int buttonTag = Convert.ToInt32(senderObject.Tag);
            if (buttonTag == correctAnswer) // if the buttontag matches the correct answer the score will be incremented by one
            {
                score = score + 1; // this will increment the score by one. 
                label2.Text = "Score: " + Convert.ToString(score);

            }
            optionnumber = 6; // this sets the option to 6
            questionNumber += 1;
            askQuestion(questionNumber, optionnumber); // calls the askQuestion method by passing questionNumber, optionnumber arguments


        }
        //This function will display the question and answer options to the user
        public void askQuestion(int qnum, int optionnumber)
        {
            qnum = questionNumber; // sets qnum to become questionNumber

            //Set the image to be displayed
            pictureBox1.Image = Properties.Resources.images;
            try
            {
                //This will display the question and answer options to the user
                label1.Text = questions[(questionNumber) * (optionnumber)]; // the question asked to the user
                string[] options = new string[] { questions[(questionNumber) * (optionnumber) + 1], questions[(questionNumber) * (optionnumber) + 2], questions[(questionNumber) * (optionnumber) + 3], questions[(questionNumber) * (optionnumber) + 4] };
                button1.Text = options[0];
                button2.Text = options[1];
                button3.Text = options[2];
                button4.Text = options[3];
                //This will store the correct answer and question options
                correctAnswer = Convert.ToInt32(questions[(questionNumber) * (optionnumber) + 5]);
                // This will stop the timer and display the user's score
                if (questionNumber == 9)
                {

                    timer1.Stop();

                    percentage = (int)Math.Round((double)(score * 100)) / totalQuestions;

                    MessageBox.Show("Quiz Ended!" + Environment.NewLine + "You have answered " + score + " questions correctly" + Environment.NewLine +
                    "Your total percentage is " + percentage + "%" + Environment.NewLine +
                    "Click OK to play again");
                    score = 0;
                    questionNumber = 0;

                    DateTime time = DateTime.Now;
                    string user = lblUserName.Text;
                    string subject = "General knowledge";
                    string SQL_2 = "INSERT INTO tblUserScores (UserName, TestDate, Score, Subject) VALUES ('" + user + "','" + time + "'," + percentage + ",'" + subject + "');";
                    DBCon.AmendAddInsertData_2(SQL_2);


                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        public void exitBtn_Click(object sender, EventArgs e)
        {
            // This function is called when the user when they click on the exit button. This will allow the user to close the form
            this.Close();
        }
        // This is a loader for the form
        private void General_knowledge_question_Load(object sender, EventArgs e)
        {

            lblUserName.Text = System.Environment.UserName; // This will set the username of the current user who currently running the application

        }
        private void timer1_Tick(object sender, EventArgs e)
        {
            DateTime nowDateTime = DateTime.Now; // tthis displays the currentdate and time
            var currentTime = Math.Abs(startTime.Second - nowDateTime.Second); // calculates the difference between the current time and the start time
            lbltimer.Text = currentTime.ToString(); // It will then be displayed as a string in a label called lbltimer as shown
        }
    }
}

